import requests
from datetime import datetime

from aiogram.types import Message

from utils.geolocation import get_geolocation
from utils.dictionaries import weather_codes, error_bot


async def get_weather(message: Message):
    """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ.

        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.
        """
    city = message.text
    latitude, longitude = await get_geolocation(city)
    try:
        if latitude is not None and longitude is not None:
            weather_url = f'https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}&current_weather=true&hourly=temperature_2m,relativehumidity_2m,windspeed_10m,weathercode'
            weather_response = requests.get(weather_url)

            if weather_response.status_code == 200:
                weather_data = weather_response.json()
                current_weather = weather_data.get('current_weather', {})
                hourly_data = weather_data.get('hourly', {})
                timestamps = hourly_data.get('time', [])

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Å
                current_hour = datetime.utcnow().hour

                # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–µ–∫—É—â–µ–º—É —á–∞—Å—É
                humidity_index = next(
                    (i for i, t in enumerate(timestamps) if datetime.fromisoformat(t).hour == current_hour), None)

                # –ï—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –Ω–∞–π–¥–µ–Ω, –≤—ã–±–∏—Ä–∞–µ–º –≤–ª–∞–∂–Ω–æ—Å—Ç—å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Å–∞
                humidity = hourly_data.get('relativehumidity_2m', [])[
                    humidity_index] if humidity_index is not None else 'N/A'
                temperature = current_weather.get('temperature', 'N/A')
                windspeed = current_weather.get('windspeed', 'N/A')
                weather_code = current_weather.get('weathercode', 'N/A')
                weather_description = weather_codes.get(weather_code, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–¥ –ø–æ–≥–æ–¥—ã")

                await message.reply(
                    f"""üå° <b>–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}:</b>
                    \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {windspeed} –∫–º/—á\n–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–û–ø–∏—Å–∞–Ω–∏–µ: {weather_description}""",
                    parse_mode="HTML")
            else:
                await message.reply(f"""‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ""", parse_mode="HTML")
        else:
            await message.reply(f"""‚ùå –ì–æ—Ä–æ–¥ {city} –Ω–µ –Ω–∞–π–¥–µ–Ω""", parse_mode="HTML")
    except:
        await message.reply(error_bot, parse_mode="HTML")
